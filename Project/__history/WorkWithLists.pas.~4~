unit WorkWithLists;

interface

uses
  AllTypesInProject;

implementation

{ Work with ArtistList }
Procedure WatchArtistList(ArtistList: TAdrOfList);
begin
  Writeln('|--------------|-------------------|--------------------|-------------------------|');
  Writeln('| Код продукта |  Имя исполнителя  | Страна исполнителя | Направление исполнителя |');
  Writeln('|--------------|-------------------|--------------------|-------------------------|');
  while ArtistList^.next <> nil do
  begin
    ArtistList := ArtistList^.next;
    Writeln('|', ArtistList^.Artist.ID:13, ' |', ArtistList^.Artist.Name:18,
      ' |', ArtistList^.Artist.Country:19, ' |', ArtistList^.Artist.Direction
      :24, ' |');
  end;
  Writeln('|--------------|-------------------|--------------------|-------------------------|');
end;

{ Work with ArtistList }
Procedure WatchALbumList(ArtistList: TAdrOfList);
begin
  Writeln('|--------------|-------------------|--------------------|-------------------------|');
  Writeln('| Код продукта |  Имя исполнителя  | Страна исполнителя | Направление исполнителя |');
  Writeln('|--------------|-------------------|--------------------|-------------------------|');
  while ArtistList^.next <> nil do
  begin
    ArtistList := ArtistList^.next;
    Writeln('|', ArtistList^.Artist.ID:13, ' |', ArtistList^.Artist.Name:18,
      ' |', ArtistList^.Artist.Country:19, ' |', ArtistList^.Artist.Direction
      :24, ' |');
  end;
  Writeln('|--------------|-------------------|--------------------|-------------------------|');
end;

end.
